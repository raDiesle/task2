{"version":3,"sources":["Login/Login.js","Users/Search/Search.js","Users/Paginator/Pagination.js","Country/Country.js","UserDetails/UserDetails.js","Users/Users.js","App.js","serviceWorker.js","index.js"],"names":["Login","_ref","setIsLoggedInCrudadmin","_useState","useState","_useState2","Object","slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","_useState6","validationError","setValidationError","_useState7","_useState8","isLoggedIn","setIsLoggedIn","react_default","a","createElement","react_router","to","className","onSubmit","event","preventDefault","isCrudadmin","type","placeholder","onChange","e","target","value","Search","searchValue","setSearchValue","Pagination","dataSize","pageSize","currentPage","setCurrentPage","paginationSize","isEnoughElementsForPagination","lastPageNumber","Math","floor","renderForward","renderBack","disabled","onClick","countryConfigList","de","en","Country","code","UserDetails","userId","isLoggedInCrudadmin","country","setCountry","useEffect","1","lastname","gender","birthdate","2","3","4","setGender","handleGenderChange","setLastname","console","log","currentDetails","hasValidationError","length","Fragment","alphanumericValue","replace","checked","Users","lastNameAscSort","setLastNameAscSort","lastNameAscSortFromStorage","localStorage","getItem","toLowerCase","userResults","start","id","name","filter","user","startsWith","sort","b","slice","selectedUserId","setSelectedUserId","newSortFlag","setItem","toString","map","key","src_Country_Country","Pagination_Pagination","UserDetails_UserDetails","App","react_router_dom","path","exact","render","props","src_Login_Login","assign","Users_Users","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c2fe3308.chunk.js","sourcesContent":["import React,  { useState }  from 'react';\r\nimport './Login.scss';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Login = ({setIsLoggedInCrudadmin}) => {\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [validationError, setValidationError] = useState('');\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        const isCrudadmin = username === 'crudadmin' && password === 'password';\r\n        const isReadonlyAdmin = username === 'readonlyadmin' && password === 'password';\r\n\r\n        setIsLoggedIn(isCrudadmin || isReadonlyAdmin);\r\n        if(!isLoggedIn){\r\n            setValidationError('username does not exist or password is wrong');\r\n        }\r\n        setIsLoggedInCrudadmin(isCrudadmin);\r\n    };\r\n\r\n    if(isLoggedIn){\r\n        return <Redirect to=\"/users\" />;\r\n    }else{\r\n        return (\r\n            <form className=\"loginForm\" onSubmit={onFormSubmit}>\r\n                <div>\r\n                    <input type=\"text\" placeholder=\"username\" onChange={(e)=> setUsername(e.target.value)}/>\r\n                </div>\r\n                <div>\r\n                    <input type=\"password\" placeholder=\"password\" onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n                <div className=\"submitBtn\">\r\n                    <input type=\"submit\" value=\"login\" />\r\n                </div>\r\n\r\n                { validationError && <div className=\"inputError\">{validationError}</div> }\r\n            </form>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nexport default function Search({searchValue, setSearchValue}) {\r\n    return <input type=\"text\" onChange={(event) => setSearchValue(event.target.value)}/>\r\n}\r\n","import React from 'react';\r\nimport './Pagination.scss';\r\n\r\nexport default function Pagination({dataSize, pageSize, currentPage, setCurrentPage}) {\r\n\r\n    const backward = \"<<\";\r\n    const forward = \">>\";\r\n\r\n    const handleBackward = () => {\r\n            setCurrentPage(currentPage - 1);\r\n    };\r\n\r\n    const handleForward = () => {\r\n        setCurrentPage(currentPage + 1);\r\n    };\r\n\r\n    const paginationSize = pageSize-1;\r\n    const isEnoughElementsForPagination = dataSize > paginationSize;\r\n    const lastPageNumber = Math.floor(dataSize / paginationSize);\r\n    const renderForward = isEnoughElementsForPagination && currentPage <= lastPageNumber;\r\n\r\n    const renderBack = currentPage > 0;\r\n    return (\r\n        <div className='pagination'>\r\n            <div className='paginationControls'>\r\n                { <button type=\"button\" disabled={!renderBack} onClick={handleBackward}>{backward}</button>}\r\n                <span>[{currentPage}]</span>\r\n                {<button type=\"button\" disabled={!renderForward} onClick={handleForward}>{forward}</button>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nconst countryConfigList = {\r\n    de : \"Germany\",\r\n    en: \"America\"\r\n};\r\nconst Country = ({code}) => {\r\n    return <span>{countryConfigList[code]}</span>;\r\n};\r\nexport default Country;\r\n\r\n\r\nexport {countryConfigList};\r\n","import React, {useState, useEffect} from 'react';\r\nimport './UserDetails.scss';\r\n\r\nimport {countryConfigList} from \"../Country/Country\";\r\n\r\nexport default function UserDetails({userId, isLoggedInCrudadmin}) {\r\n    const getUserDetailsObject = () => {\r\n        return {\r\n            1: {\r\n                lastname: \"Amend\",\r\n                country: \"de\",\r\n                gender: \"male\",\r\n                birthdate: \"10.08.1985\"\r\n            },\r\n            2: {\r\n                lastname: \"Amend2\",\r\n                country: \"en\",\r\n                gender: \"female\",\r\n                birthdate: \"20.08.1985\"\r\n            },\r\n            3: {\r\n                lastname: \"Amend3\",\r\n                country: \"en\",\r\n                gender: \"female\",\r\n                birthdate: \"20.04.1985\"\r\n            },\r\n            4: {\r\n                lastname: \"Amend4\",\r\n                country: \"de\",\r\n                gender: \"female\",\r\n                birthdate: \"22.08.1985\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const [country, setCountry] = useState('');\r\n    useEffect(() =>{\r\n        if(userId === 0){\r\n            return;\r\n        }\r\n        setCountry(getUserDetailsObject()[userId].country);\r\n    }, [userId]);\r\n    const handleCountryChange = (event) => {\r\n        setCountry(event.target.value);\r\n    };\r\n\r\n    const [gender, setGender] = useState('male');\r\n    useEffect(() =>{\r\n        if(userId === 0){\r\n            return;\r\n        }\r\n        setGender(getUserDetailsObject()[userId].gender);\r\n    }, [userId]);\r\n    const handleGenderChange = (event) => {\r\n        setGender(event.target.value);\r\n    };\r\n\r\n    const [lastname, setLastname] = useState('');\r\n    useEffect(() =>{\r\n        if(userId === 0){\r\n            return;\r\n        }\r\n        const lastname = getUserDetailsObject()[userId].lastname;\r\n        console.log(lastname);\r\n        setLastname(lastname);\r\n    }, [userId]);\r\n    const handleLastnameChange = (event) => {\r\n        const value = event.target.value;\r\n        const alphanumericValue = value.replace(/[^a-z]/gi, '');\r\n        setLastname(alphanumericValue);\r\n    };\r\n\r\n\r\n    if (userId === 0) {\r\n        return <div className=\"userDetails\"><h2>Please select user</h2></div>;\r\n    }\r\n\r\n    const currentDetails = getUserDetailsObject()[userId];\r\n\r\n\r\n    const handleSaveClicked = () =>{\r\n\r\n    };\r\n\r\n    const hasValidationError = lastname.length === 0;\r\n\r\n    return (\r\n        <div className=\"userDetails\">\r\n            <h2>User Details of: {currentDetails.lastname}</h2>\r\n\r\n            {\r\n                isLoggedInCrudadmin ?\r\n                (\r\n                    <React.Fragment>\r\n                        <div className={hasValidationError ? 'inputError' : ''}>\r\n                            <div>Lastname:</div>\r\n                            <input type=\"text\" value={lastname} onChange={handleLastnameChange} />\r\n                            {hasValidationError && <div>Lastname must not be empty</div>}\r\n                        </div>\r\n                        <div>\r\n                            <div>Country: </div>\r\n                        <select value={country} onChange={handleCountryChange} >\r\n                            <option value=\"de\" >{countryConfigList['de']}</option>\r\n                            <option value=\"en\" >{countryConfigList['en']}</option>\r\n                        </select>\r\n                        </div>\r\n                        <div>\r\n                            <div>Gender: </div>\r\n                            Male:<input type=\"radio\" value=\"male\" checked={gender === 'male'} onChange={handleGenderChange} />\r\n                            Female:<input type=\"radio\" value=\"female\" checked={gender === 'female'} onChange={handleGenderChange} />\r\n                        </div>\r\n                        <div>birthdate: {currentDetails.birthdate}</div>\r\n                        <div>\r\n                            <button type=\"button\" disabled={hasValidationError} onClick={handleSaveClicked} >Save</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                ) :\r\n                (\r\n                    <React.Fragment>\r\n                        <div>{countryConfigList[currentDetails.country]}</div>\r\n                        <div>{currentDetails.gender}</div>\r\n                        <div>birthdate: {currentDetails.birthdate}</div>\r\n                    </React.Fragment>\r\n\r\n                )\r\n            }\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './Users.scss';\r\nimport Search from \"./Search/Search\";\r\nimport Pagination from \"./Paginator/Pagination\";\r\nimport Country from \"../Country/Country\";\r\nimport UserDetails from \"../UserDetails/UserDetails\";\r\n\r\nexport default function Users({isLoggedInCrudadmin}) {\r\n\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const pageSize = 3;\r\n\r\n\r\n    const [lastNameAscSort, setLastNameAscSort] = useState(false);\r\n    const lastNameAscSortString = 'lastNameAscSort';\r\n    useEffect(() => {\r\n        const lastNameAscSortFromStorage = localStorage.getItem(lastNameAscSortString).toLowerCase() === 'true';\r\n        setLastNameAscSort(lastNameAscSortFromStorage);\r\n    }, []);\r\n    const handleSort = () => {\r\n        const newSortFlag = !lastNameAscSort;\r\n        setLastNameAscSort(newSortFlag);\r\n        localStorage.setItem(lastNameAscSortString, newSortFlag.toString());\r\n    };\r\n\r\n    const getUsersResults = () => {\r\n        return [\r\n            {id: 1, name: \"Amend1\", country: \"de\"},\r\n            {id: 2, name: \"Amend2\", country: \"en\"},\r\n            {id: 3, name: \"Amend3\", country: \"de\"},\r\n            {id: 4, name: \"Amend4\", country: \"de\"},\r\n            {id: 8, name: \"Müller\", country: \"en\"}\r\n        ]\r\n    };\r\n\r\n    let userResults = [];\r\n\r\n    // filter, pagination, sort\r\n    if (searchValue.length > 3) {\r\n        userResults = getUsersResults();\r\n\r\n        userResults = userResults.filter(user => {\r\n            return user.name.toLowerCase().startsWith(searchValue.toLowerCase());\r\n        });\r\n\r\n        userResults = userResults.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n                return lastNameAscSort ? -1 : 1;\r\n            }\r\n            if (a.name > b.name) {\r\n                return !lastNameAscSort ? 1 : -1;\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        const start = currentPage * pageSize;\r\n        userResults = userResults.slice(start, start + pageSize);\r\n    }\r\n\r\n\r\n    const [selectedUserId, setSelectedUserId] = useState(0);\r\n    const handleUserSelected = (id) => {\r\n        setSelectedUserId(id);\r\n    };\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Search {...{searchValue, setSearchValue}} />\r\n            <table className=\"table\">\r\n                <tbody>\r\n                <tr>\r\n                    <td className=\"th actionPointer\" onClick={handleSort}>\r\n                        Name <i className={!lastNameAscSort ? 'sortByAsc' : 'sortByDesc'}></i>\r\n                    </td>\r\n                    <td className=\"th\">Country</td>\r\n                </tr>\r\n                {userResults.map((user) => {\r\n                    return (\r\n                        <tr key={user.id} className=\"tr\" onClick={() => handleUserSelected(user.id)}>\r\n                            <td className=\"td\">\r\n                                {user.name}\r\n                            </td>\r\n                            <td className=\"td\">\r\n                                <Country code={user.country}/>\r\n                            </td>\r\n                        </tr>\r\n                    );\r\n                })\r\n                }\r\n                </tbody>\r\n            </table>\r\n            {userResults.length === 0 && <div className=\"noResults\">Give at least 3 characters to search for user. No users found.</div>}\r\n            <Pagination\r\n                dataSize={userResults.length}\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n                pageSize={pageSize}\r\n            />\r\n            <UserDetails userId={selectedUserId} isLoggedInCrudadmin={isLoggedInCrudadmin}/>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport './App.css';\n\nimport Login from \"./Login/Login\";\nimport Users from \"./Users/Users\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nfunction App() {\n\n    const [isLoggedInCrudadmin, setIsLoggedInCrudadmin] = useState(false);\nconsole.log(isLoggedInCrudadmin);\n    return (\n\n        <div className=\"layout\">\n            <header className=\"header\">\n                User Administration\n            </header>\n            <div className=\"content\">\n                <div className=\"view\">\n                    <Router>\n                        <Route path=\"/\" exact\n                               render={(props) => <Login {...props} setIsLoggedInCrudadmin={setIsLoggedInCrudadmin}\n                                                         isLoggedInCrudadmin={isLoggedInCrudadmin}/>}\n                        />\n                        <Route path=\"/login/\"\n                               render={(props) => <Login {...props} setIsLoggedInCrudadmin={setIsLoggedInCrudadmin}\n                                                         isLoggedInCrudadmin={isLoggedInCrudadmin}/>}\n                        />\n                        <Route path=\"/users/\"\n                               render={(props) => <Users {...props} isLoggedInCrudadmin={isLoggedInCrudadmin}/>}/>\n                    </Router>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}